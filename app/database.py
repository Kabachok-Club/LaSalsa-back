from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession, async_sessionmaker
from sqlalchemy.orm import DeclarativeBase
from app.config import DB_HOST, DB_PORT, DB_USER, DB_PASS, DB_NAME  # noqa: E402

# üëá –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ø—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å!)
DATABASE_URL = f"postgresql+asyncpg://{DB_USER}:{DB_PASS}@{DB_HOST}:{DB_PORT}/{DB_NAME}"

# üëá –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫
engine = create_async_engine(DATABASE_URL, echo=False)

# üëá –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–π —Ñ–∞–±—Ä–∏–∫–∞—Ç
async_session_maker = async_sessionmaker(engine, expire_on_commit=False)

# üëá –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–µ–π
class Base(DeclarativeBase):
    pass

# üëá –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –¥–ª—è FastAPI (yield, –∞ –Ω–µ return!)
async def get_async_session():
    async with async_session_maker() as session:
        yield session
